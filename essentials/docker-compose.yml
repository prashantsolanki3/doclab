x-networks:
  &networks
  networks:
    - agent_network
x-flame-labels:
  &flame_labels
  flame.type: app
  flame.icon: custom

version: "3.7"
services:
  agent:
    image: portainer/agent:2.16.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    <<: *networks
    deploy:
      mode: global
      placement:
        constraints: [ node.platform.os == linux ]
    restart: ${RESTART_POLICY}
  portainer:
    image: portainer/portainer-ce:2.16.0
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "8000:8000"
    volumes:
      - ${VOL_CONFIG}/portainer:/data
    <<: *networks
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
    restart: ${RESTART_POLICY}
    labels:
      <<: *flame_labels
      flame.name: Portainer
      flame.url: https://portainer.$DOMAIN
  flame:
    image: pawelmalak/flame
    container_name: flame
    hostname: flame
    environment:
      - DOCKER_HOST=dockerproxy
    volumes:
      - ${VOL_CONFIG}/flame:/app/data
      - DCOKER_HOST=dockerproxy
    restart: ${RESTART_POLICY}
    deploy:
      mode: global
    labels:
      <<: *flame_labels
      flame.name: Flame
      flame.url: https://flame.$DOMAIN
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    environment:
      - CONTAINERS=1
      - POST=0
networks:
  default:
    external: true
    name: intranet
  agent_network:
    driver: overlay
    attachable: true
